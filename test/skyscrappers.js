const { solvePuzzle, times } = require('../snippets/skyscrappers')
const { test } = require('tap')

test('7x7', (t) => {
  t.deepEqual(
    solvePuzzle([
      0,2,3,0,2,0,0,
      5,0,4,5,0,4,0,
      0,4,2,0,0,0,6,
      5,2,2,2,2,4,1
    ]),[
      [7,6,2,1,5,4,3],
      [1,3,5,4,2,7,6],
      [6,5,4,7,3,2,1],
      [5,1,7,6,4,3,2],
      [4,2,1,3,7,6,5],
      [3,7,6,2,1,5,4],
      [2,4,3,5,6,1,7]
    ],
    '1st'
  )
  t.deepEqual(
    solvePuzzle([
      7,0,0,0,2,2,3,
      0,0,3,0,0,0,0,
      3,0,3,0,0,5,0,
      0,0,0,0,5,0,4
    ]),[
      [1,5,6,7,4,3,2],
      [2,7,4,5,3,1,6],
      [3,4,5,6,7,2,1],
      [4,6,3,1,2,7,5],
      [5,3,1,2,6,4,7],
      [6,2,7,3,1,5,4],
      [7,1,2,4,5,6,3]
    ],
    '2nd'
  )
})
test('6x6', (t) => {
  t.deepEqual(
    solvePuzzle([
      3, 2, 2, 3, 2, 1,
      1, 2, 3, 3, 2, 2,
      5, 1, 2, 2, 4, 3,
      3, 2, 1, 2, 2, 4
    ]),
    [
      [ 2, 1, 4, 3, 5, 6],
      [ 1, 6, 3, 2, 4, 5],
      [ 4, 3, 6, 5, 1, 2],
      [ 6, 5, 2, 1, 3, 4],
      [ 5, 4, 1, 6, 2, 3],
      [ 3, 2, 5, 4, 6, 1]
    ],
    '1st'
  )
  t.deepEqual(
    solvePuzzle([
      0, 0, 0, 2, 2, 0,
      0, 0, 0, 6, 3, 0,
      0, 4, 0, 0, 0, 0,
      4, 4, 0, 3, 0, 0
    ]),
    [
      [ 5, 6, 1, 4, 3, 2 ],
      [ 4, 1, 3, 2, 6, 5 ],
      [ 2, 3, 6, 1, 5, 4 ],
      [ 6, 5, 4, 3, 2, 1 ],
      [ 1, 2, 5, 6, 4, 3 ],
      [ 3, 4, 2, 5, 1, 6 ]
    ],
    '2nd'
  )
})

